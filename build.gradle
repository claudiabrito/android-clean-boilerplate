buildscript {
  ext.versions = ['minSdk'        : 17,
                  'compileSdk'    : 26,

                  'supportLibrary': '26.0.2',
                  'androidPlugin' : '3.0.0-beta7',
                  'androidTools'  : '26.0.0-beta7']

  ext.deps = [android  : ['runtime'     : 'com.google.android:android:4.1.1.4',
                          'gradlePlugin': "com.android.tools.build:gradle:${versions.androidPlugin}",],
              'support': ['compat'     : "com.android.support:support-compat:${versions.supportLibrary}",
                          'annotations': "com.android.support:support-annotations:${versions.supportLibrary}",
                          'test'       : ['runner': 'com.android.support.test:runner:1.0.1',],],
              'lint'   : ['core'  : "com.android.tools.lint:lint:${versions.androidTools}",
                          'api'   : "com.android.tools.lint:lint-api:${versions.androidTools}",
                          'checks': "com.android.tools.lint:lint-checks:${versions.androidTools}",
                          'tests' : "com.android.tools.lint:lint-tests:${versions.androidTools}",]]

  repositories {
    mavenCentral()
    jcenter()
    google()
  }

  dependencies {
    classpath deps.android.gradlePlugin
  }
}

subprojects { project ->

  repositories {
    mavenCentral()
    jcenter()
    google()
  }

  apply plugin: 'checkstyle'

  task checkstyle(type: Checkstyle) {
    configFile rootProject.file("config/checkstyle/checkstyle.xml")
    source 'src'
    ignoreFailures false
    showViolations true
    include '**/*.java'

    classpath = files()
  }

  afterEvaluate {
    if (project.tasks.findByName('check')) {
      check.dependsOn('checkstyle')
    }
  }
}
